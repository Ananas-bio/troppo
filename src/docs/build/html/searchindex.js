Search.setIndex({"docnames": ["index", "installation", "modules", "troppo.methods", "troppo.methods.gapfill", "troppo.methods.reconstruction", "troppo.omics", "troppo.omics.readers", "troppo.tasks", "troppo.utilities", "troppo.validation", "tutorial", "tutorial_batch_run", "tutorial_fastcore", "tutorial_gene_level_thresholding", "tutorial_gimme", "tutorial_imat", "tutorial_task_eval", "tutorial_tinit"], "filenames": ["index.rst", "installation.rst", "modules.rst", "troppo.methods.rst", "troppo.methods.gapfill.rst", "troppo.methods.reconstruction.rst", "troppo.omics.rst", "troppo.omics.readers.rst", "troppo.tasks.rst", "troppo.utilities.rst", "troppo.validation.rst", "tutorial.rst", "tutorial_batch_run.rst", "tutorial_fastcore.rst", "tutorial_gene_level_thresholding.rst", "tutorial_gimme.rst", "tutorial_imat.rst", "tutorial_task_eval.rst", "tutorial_tinit.rst"], "titles": ["Welcome to Troppo\u2019s documentation!", "Installation", "Troppo", "Methods module", "Gapfilling Methods", "Reconstruction Methods", "Omics Module", "Readers for Omics data", "Tasks Assessment Module", "Utilities module", "Validation Module", "Tutorials", "Batch integration of Omics Data", "FastCORE tutorial", "Gene-level thresholding tutorial", "GIMME tutorial", "iMAT tutorial", "Task performance evaluation", "tINIT tutorial"], "terms": {"instal": [0, 2], "method": [0, 2, 6, 11, 12, 13, 14, 15, 16, 18], "modul": [0, 2, 17], "omic": [0, 2, 3, 11, 13, 15, 16, 18], "task": [0, 2, 4, 11], "assess": [0, 2, 5], "util": [0, 2, 8, 12, 17], "valid": [0, 2, 4, 6], "tutori": [0, 12], "gimm": [0, 2, 3, 11, 12, 13, 18], "fastcor": [0, 2, 3, 4, 11, 17], "imat": [0, 2, 3, 11], "batch": [0, 8, 11, 17], "integr": [0, 2, 5, 11, 14], "data": [0, 2, 3, 9, 11, 17], "perform": [0, 4, 5, 6, 11, 14], "evalu": [0, 8, 11], "index": [0, 4, 5, 7, 13, 15, 16, 18], "search": [0, 6], "page": 0, "pip": 1, "troppo": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "git": 1, "http": [1, 6, 14], "com": 1, "biosystemsum": 1, "tissu": [2, 6, 7], "specif": [2, 5, 6, 7, 12, 13, 15, 16, 17, 18], "reconstruct": [2, 4, 12, 13, 15, 16, 17, 18], "phenotyp": 2, "predict": 2, "us": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18], "i": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18], "python": 2, "packag": [2, 6], "contain": [2, 3, 4, 6, 8, 12, 13, 14, 15, 16, 17, 18], "constraint": [2, 4, 5, 8], "base": [2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 18], "model": [2, 4, 5, 6, 8, 10, 11, 12], "The": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18], "main": [2, 6, 11], "purpos": 2, "thi": [2, 3, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18], "provid": [2, 4, 6, 14], "an": [2, 4, 5, 6, 7, 8, 11, 14, 15, 16, 18], "open": [2, 8, 17], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10], "framework": [2, 12], "which": [2, 3, 6, 7, 13, 14, 15, 16, 17, 18], "both": [2, 5], "modular": 2, "flexibl": 2, "other": [2, 5, 6, 8, 14, 15, 16, 18], "cobrapi": 2, "frame": [2, 6], "cameo": 2, "whose": [2, 6, 13], "alreadi": 2, "gener": [2, 4, 5, 6, 12, 13, 15, 16, 18], "structur": [2, 17], "interpret": 2, "metabol": [2, 3, 4, 6, 17], "A": [2, 4, 5, 7, 8, 11, 17], "mi": 2, "lp": 2, "solver": [2, 3, 4, 5, 8, 12, 13, 15, 17, 18], "requir": [2, 12, 14, 15, 16, 18], "most": [2, 4, 6, 7, 13], "present": [2, 4, 5, 6, 8, 18], "current": [2, 6, 8, 14], "support": [2, 6, 13, 14, 15, 16, 18], "optlang": 2, "turn": 2, "allow": [2, 5, 8, 12, 13, 15, 16, 17, 18], "like": 2, "cplex": [2, 12, 13, 17, 18], "gurobi": [2, 15], "implement": [2, 11], "ar": [2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18], "corda": [2, 3, 11], "t": [2, 3, 17], "init": [2, 3], "from": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18], "pypi": 2, "stabl": 2, "releas": 2, "github": 2, "latest": 2, "develop": 2, "gapfil": 2, "combinatori": [2, 3], "algorithm": [2, 3, 11, 12, 13, 15, 16, 17, 18], "elementari": [2, 3], "flux": [2, 3, 5, 6, 8, 13, 15, 17], "mode": [2, 3, 5, 8], "fastcc": [2, 3], "pathwai": [2, 3], "analysi": [2, 3, 15, 16, 17], "swiftcor": [2, 3, 11], "class": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18], "contextspecificmodelreconstructionalgorithm": [2, 3, 5], "gapfillalgorithm": [2, 3, 4], "gapfillproperti": [2, 3, 4], "propertiesreconstruct": [2, 3, 4, 5], "decode_mt_list": [2, 3], "decode_rx_list": [2, 3], "reader": [2, 6, 12, 13, 15, 16, 18], "hpa": [2, 6], "microarrai": [2, 6], "core": [2, 5, 13, 16, 17], "identifiermap": [2, 6], "omicscontain": [2, 6, 7, 11], "omicsdatamap": [2, 6], "omicsmeasurementset": [2, 6], "tabularcontain": [2, 6], "typedomicsmeasurementset": [2, 6], "has_valid_dim": [2, 6], "gene": [0, 2, 7, 11], "level": [0, 2, 7, 11], "threshold": [0, 2, 4, 5, 11, 13, 15, 16, 18], "genelevelthreshold": [2, 6, 11, 14], "id": [2, 4, 5, 7, 11, 17], "convert": [2, 7], "idconvert": [2, 6], "searchnomenclatur": [2, 6], "reaction": [2, 4, 5, 8, 11, 13, 14, 15, 16, 17, 18], "adjustedscoreintegrationstrategi": [2, 6, 11], "continuousscoreintegrationstrategi": [2, 6, 11, 15, 16, 18], "customselectionintegrationstrategi": [2, 6, 11, 13], "defaultcoreintegrationstrategi": [2, 6, 11], "reactionprotectionmixin": [2, 6], "scoreintegrationstrategi": [2, 6], "thresholdselectionintegrationstrategi": [2, 6, 11, 13], "taskevalu": [2, 4, 8, 17], "io": [2, 12, 13, 15, 16, 18], "exceltaskio": [2, 8], "jsontaskio": [2, 8, 17], "taskio": [2, 8], "list": [2, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18], "if_none_return_list": [2, 9], "is_list": [2, 9], "is_list_else_empti": [2, 9], "statist": 2, "normal": [2, 6, 9], "z_score": [2, 9], "contextspecificmodelsimul": [2, 10], "default_post_processing_func": [2, 10], "divid": 3, "two": [3, 8, 11], "part": 3, "first": [3, 7, 11, 13, 15, 16, 17, 18], "fill": [3, 4], "gap": [3, 4], "network": 3, "second": [3, 11], "combinatorialgapfil": [3, 4], "efmgapfil": [3, 4], "efmgapfillproperti": [3, 4], "fastccproperti": [3, 4], "combinatorialefmgapfil": [3, 4], "subefmgapfil": [3, 4], "simulate_context": [3, 4], "cordaproperti": [3, 5], "corsomodel": [3, 5], "corsosolut": [3, 5], "fastcoreproperti": [3, 5, 13], "gimmemodel": [3, 5], "gimmeproperti": [3, 5, 15], "gimmesolut": [3, 5], "imatproperti": [3, 5, 16], "swiftcoreproperti": [3, 5], "find_cor": [3, 5], "tinit": [0, 3, 5, 11], "tinitproperti": [3, 5, 18], "": [3, 4, 5, 8, 13, 15, 16, 17, 18], "lb": [3, 4, 5, 8, 13, 15, 16, 17, 18], "ub": [3, 4, 5, 8, 13, 15, 16, 17, 18], "properti": [3, 4, 5, 6, 8, 13, 15, 16, 18], "object": [3, 4, 5, 6, 7, 8, 10, 11, 12, 17], "properties_class": [3, 4, 5], "abstract": [3, 6, 8], "run": [3, 4, 5, 11], "propertydictionari": 3, "defin": [3, 5, 6, 8, 11, 13, 15, 16, 18], "base_mandatori": 3, "dict": [3, 4, 5, 6, 7, 8, 10, 12, 17], "dictionari": [3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18], "mandatori": [3, 8], "includ": [3, 5, 6, 7, 13, 14, 15, 16, 17, 18], "base_opt": 3, "option": [3, 5, 6, 7, 9, 10, 14], "lsystem_arg": [3, 4], "avbl_flux": [3, 4], "decoder_funct": 3, "function": [3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 18], "lambda": [3, 12, 13, 15, 16, 18], "template_model": [3, 4], "omics_typ": [3, 6, 7, 12, 13, 15, 16, 18], "env_condit": 3, "flux_threshold": [3, 4, 5, 12, 13, 15], "static": [3, 4, 5, 6, 8], "from_integrated_scor": [3, 5], "score": [3, 5, 6, 9, 11, 12, 14], "kwarg": [3, 5, 6, 7, 8, 10, 12], "x": [3, 6, 9, 10, 12, 13, 15, 16, 18], "rx": [3, 5], "mt": 3, "consensu": 4, "min_acceptable_task": 4, "0": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18], "5": [4, 5, 6, 13, 14, 16, 17], "remov": [4, 6, 15, 16, 18], "final": [4, 5, 11, 15, 16, 18], "templat": [4, 5], "must": [4, 6, 7, 8, 14, 15, 16, 18], "possibli": 4, "rx_name": 4, "met_nam": 4, "task_dict": 4, "need": [4, 12, 13, 15, 16, 17, 18], "complet": [4, 6, 7, 17], "int": [4, 5, 6, 7, 8], "float": [4, 5, 6, 8], "default": [4, 5, 6, 7, 10, 16], "minimum": [4, 5, 13, 15, 16, 18], "number": [4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 18], "If": [4, 5, 6, 8], "integ": [4, 6], "percentag": [4, 5], "build_final_model": 4, "partial": 4, "start_from": 4, "lost_metabolic_task": 4, "lost_reaction_set": 4, "set": [4, 5, 6, 8, 11, 13], "build": [4, 5, 11], "ad": [4, 8], "start": 4, "were": [4, 8, 12, 14], "lost": 4, "when": [4, 5, 6, 7, 14], "wa": [4, 6, 8, 12, 14], "taskvalid": 4, "instanc": [4, 5, 6, 11, 13, 15, 16, 17, 18], "final_model": 4, "indic": [4, 5, 13, 15, 16, 18], "rx_presenc": 4, "iter": [4, 7, 8, 13, 15, 16, 18], "generate_partial_model": 4, "presenc": [4, 17], "absenc": 4, "partial_model": 4, "is_valid_model": 4, "ko": 4, "bool": [4, 5, 6, 7, 8, 9, 10], "check": [4, 5, 6], "test": 4, "after": 4, "knock": [4, 17], "out": [4, 17], "boolean": [4, 13, 15, 16, 17, 18], "efm": 4, "ndarrai": [4, 5, 6, 8], "kshortestefmalgorithm": 4, "stoichiometr": [4, 5, 8, 13, 15, 16, 18], "matrix": [4, 5, 8, 13, 15, 16, 18], "lower": [4, 5, 6, 8, 13, 14, 15, 16, 18], "bound": [4, 5, 6, 8, 13, 15, 16, 18], "upper": [4, 5, 6, 8, 13, 14, 15, 16, 18], "str": [4, 5, 6, 7, 8], "avail": [4, 12], "argument": [4, 5, 6, 8, 10, 13, 15, 16, 18], "pass": [4, 5, 6, 7, 10, 15, 16, 17, 18], "irreversiblelinearpatternsystem": 4, "enumer": [4, 13], "get_enumer": 4, "get": [4, 5, 8, 13, 15, 17], "alia": [4, 5], "result": [4, 5, 6, 8, 10, 11, 15, 16, 18], "activ": [4, 5, 6, 8, 14, 15, 16, 17], "variabl": [4, 5, 15], "map": [4, 5, 6, 11, 17], "origin": [4, 6, 8], "glpk": 4, "kshproperti": 4, "cobamp": [4, 6, 8, 12, 17], "kshortest": 4, "kshortestproperti": 4, "n_thread": 4, "force_non_cancel": 4, "true": [4, 5, 6, 7, 8, 9, 12, 15, 17], "bigmvalu": 4, "1000000": 4, "bigm_const": 4, "maxsolut": 4, "1": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18], "timelimit": 4, "numpi": [4, 5, 15, 16, 17], "self": [4, 6], "consist": 4, "v": [4, 12, 13, 15, 16, 17, 18], "vector": [4, 5], "inci": 4, "irrevers": [4, 5], "inconsist": 4, "irrev_revers": 4, "revers": [4, 5, 18], "direct": [4, 5], "prepocess": 4, "preprocess": [4, 5, 12, 15], "abc": 4, "nonconvex": 4, "pathway_analysi": 4, "media": 4, "combinatorial_gapfil": 4, "sample_model": 4, "model_approval_fx": 4, "gapfill_partial_pair": 4, "m0": 4, "m1": [4, 17], "prune_model": 4, "to_keep": 4, "task_react": 4, "subset_forced_react": 4, "max_tim": 4, "max_thread": 4, "big_m": 4, "fals": [4, 5, 6, 7, 8, 17], "big_m_valu": 4, "1000": [4, 17], "none": [4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 18], "at_most_n_sol": 4, "populate_max_s": 4, "solv": [4, 5], "problem": [4, 5], "forc": 4, "subset": [4, 11], "flag": [4, 7, 17], "determin": [4, 5, 6, 8, 13], "whether": [4, 5, 6, 7, 8, 10, 13, 15, 16, 18], "k": [4, 5, 12, 13, 15, 16, 17, 18], "shortest": 4, "behaviour": 4, "maximum": [4, 5, 6], "time": [4, 5, 6], "thread": [4, 5, 8, 12, 17], "big": 4, "m": [4, 17], "valu": [4, 5, 6, 7, 13, 14, 15, 16, 17, 18], "solut": [4, 5, 8, 15, 17], "size": [4, 8], "popul": 4, "missing_set": 4, "non_forc": 4, "miss": 4, "non": 4, "context": [4, 5, 8, 10, 12, 17], "sens": 4, "sol_approval_fx": 4, "arrai": 5, "corso_fba": 5, "corso": 5, "fba": 5, "block_reactions_from_idx": 5, "rxcat": 5, "block": 5, "np": [5, 8, 15, 16], "check_if_block": 5, "otherwis": [5, 6, 14], "costfx_factori": 5, "nl": 5, "om": 5, "costbas": 5, "do_function_for_reactions_on_both_model": 5, "mfunction": 5, "corsofunct": 5, "cbmodel": 5, "find_dependent_react": 5, "constrainbi": 5, "costfx": 5, "ntime": 5, "ep": 5, "tupl": [5, 6, 7, 10, 12, 17], "find": 5, "depend": 5, "given": [5, 6, 9, 10], "either": [5, 6, 7, 13, 15, 16, 18], "val": 5, "constrain": 5, "perc": 5, "cost": 5, "simul": [5, 10], "per": 5, "epsilon": [5, 16], "delet": 5, "find_reaction_limit": 5, "up": 5, "call": [5, 14, 17], "run_corda": 5, "categori": 5, "rx_cat": 5, "10000": 5, "pr_to_np": 5, "2": [5, 12, 13, 14, 16, 17], "11": 5, "loop": [5, 18], "assign": [5, 17], "calcul": 5, "pr": 5, "them": [5, 17], "high_conf_rx": 5, "medium_conf_rx": 5, "neg_conf_rx": 5, "high": 5, "confid": 5, "medium": 5, "neg": 5, "optim": [5, 8, 12], "constrainby_perc": 5, "constrainby_v": 5, "creat": [5, 6, 7, 11, 12, 17], "addit": [5, 7, 12, 15, 16, 18], "constructor": 5, "corso_element_nam": 5, "r_pseudo_corso": 5, "m_pseudo_corso": 5, "constraintbasedmodel": [5, 8], "optimize_corso": 5, "of_dict": 5, "minim": [5, 10], "constraintbi": 5, "1e": [5, 8, 16], "06": [5, 6, 7, 8], "flux1": 5, "set_corso_object": 5, "set_cost": 5, "solve_original_model": 5, "sol_max": 5, "sol_min": 5, "f": [5, 17], "index_map": 5, "var_nam": 5, "08": 5, "cobra": [5, 12, 13, 15, 16, 17, 18], "lp3": 5, "j": 5, "basi": 5, "consid": [5, 6, 7, 12, 13, 14], "Not": 5, "lp7": 5, "lp9": 5, "p": 5, "findsparsemod": 5, "singleton": 5, "spars": 5, "onli": [5, 6, 8, 13, 14, 15, 16, 17, 18], "one": [5, 6, 7, 13, 14, 15, 16, 18], "generate_lp3_problem": 5, "reverse_irreversible_reactions_in_reverse_direct": 5, "irrev_reverse_idx": 5, "identifi": [5, 7, 8, 13, 15, 16, 17, 18], "signal": 5, "metabolit": [5, 6, 8, 17, 18], "form": 5, "ones": [5, 6, 17], "modifi": 5, "0001": 5, "sol": [5, 8, 15], "gm": 5, "optimize_gimm": 5, "exp_vector": [5, 15, 16], "obj_frac": [5, 12, 15], "9": [5, 6, 12, 13, 14, 15, 16, 18], "flux_thr": 5, "express": [5, 6, 7, 13, 15, 16, 18], "each": [5, 6, 7, 11, 12, 13, 15, 16, 17, 18], "fraction": [5, 15], "same": [5, 6, 7, 8, 15, 16, 18], "all": [5, 6, 13, 15, 16, 17, 18], "reaction_id": [5, 12, 13, 15, 16, 18], "metabolite_id": [5, 12, 13, 15, 16, 18], "name": [5, 6, 7, 8, 13, 15, 16, 17, 18], "get_reaction_act": 5, "reaction_index": 5, "linearsystemoptim": 5, "empty_matrix": 5, "r": [5, 12, 13, 17], "c": 5, "generate_imat_problem": 5, "high_idx": 5, "low_idx": 5, "low": 5, "lso": 5, "linear": 5, "system": [5, 7], "lsystem": 5, "genericlinearsystem": 5, "keep": [5, 15, 16, 17, 18], "run_imat": 5, "exp_threshold": [5, 16], "toler": [5, 8, 16], "8": [5, 12, 15, 16], "weight": 5, "build_problem": 5, "run_tinit": 5, "solve_problem": 5, "reactions_scor": [5, 18], "present_metabolit": [5, 18], "essential_react": [5, 18], "production_weight": 5, "allow_excret": [5, 18], "no_reverse_loop": [5, 18], "essenti": [5, 18], "product": 5, "excret": [5, 18], "genericread": [6, 7], "tabularread": [6, 7, 12, 13, 15, 16, 18], "hparead": [6, 7], "proberead": [6, 7], "type_nam": 6, "id_mapping_t": 6, "datafram": [6, 7, 9, 13, 14, 15, 16, 18], "get_id_t": 6, "sequenc": [6, 12], "from_id": 6, "map_id": 6, "to_id": 6, "omicstyp": 6, "condit": 6, "nomenclatur": [6, 7, 12, 13, 15, 16, 18], "creation": 6, "store": [6, 13, 15, 16, 18], "inform": [6, 13, 15, 16, 17, 18], "its": [6, 7], "type": [6, 7, 13, 15, 16, 18], "where": [6, 7], "obtain": [6, 15, 16, 18], "To": [6, 14, 17], "successfulli": 6, "omictyp": 6, "b": 6, "patient": [6, 7], "load": [6, 7, 12, 13, 15, 16, 17, 18], "previous": [6, 17], "onc": 6, "can": [6, 7, 8, 11, 13, 14, 15, 16, 17, 18], "transform": [6, 14], "sever": [6, 12], "wai": [6, 15], "convers": [6, 7], "filter": 6, "regular": 6, "log": [6, 13, 17], "gene_id": 6, "otyp": 6, "convertid": 6, "new": 6, "redefin": 6, "kei": [6, 7, 13, 15, 16, 17, 18], "string": [6, 8, 12, 13, 14, 15, 16, 18], "design": 6, "accord": [6, 11, 13, 14, 15, 16, 17, 18], "hgnc": 6, "convertvalu": 6, "exp_val": 6, "field": [6, 7, 17], "differ": [6, 10, 11, 15, 16, 18], "user": [6, 7, 13], "suppli": [6, 7, 17], "import": [6, 11, 12, 17], "Will": 6, "work": 6, "_valu": 6, "na": [6, 7], "shall": [6, 7], "old": 6, "mai": 6, "numer": [6, 7], "between": [6, 11, 13, 14, 15, 16, 18], "desir": 6, "dropna": 6, "everi": 6, "entri": 6, "filterbyid": 6, "regex": 6, "match": [6, 7], "symbol": [6, 7], "attr": 6, "appli": [6, 7, 8, 11, 12, 15, 16, 18], "remain": 6, "unchang": 6, "filterbyvalu": 6, "op": 6, "abov": [6, 12, 13, 15, 16, 18], "under": [6, 10], "oper": [6, 12], "while": [6, 11], "oneof": 6, "lowerbound": 6, "upperbound": 6, "discret": [6, 7], "get_condit": 6, "get_data": 6, "get_nomenclatur": 6, "get_omicstyp": 6, "get_integrated_data_map": [6, 13, 15, 16, 18], "model_read": [6, 12, 13, 15, 16, 18], "and_func": [6, 13, 15, 16, 18], "built": 6, "min": [6, 12, 13, 15, 16, 18], "or_func": [6, 13, 15, 16, 18], "max": 6, "respons": [6, 17], "those": 6, "abstractmodelobjectread": 6, "mathemat": 6, "replac": [6, 8, 15, 16, 18], "AND": [6, 12, 13, 15, 16, 18], "protein": 6, "rule": [6, 13, 15, 16, 18], "OR": [6, 12, 13, 15, 16, 18], "arg": 6, "keyword": [6, 10], "print_valu": 6, "set_condit": 6, "newcond": 6, "set_data": 6, "newdata": 6, "set_typ": 6, "newtyp": 6, "func": [6, 8], "exp_valu": 6, "compat": [6, 12], "norm": 6, "logx": 6, "log10": 6, "maptyp": 6, "_maptyp": 6, "_score": 6, "get_scor": [6, 13], "select": [6, 11, 13, 14, 15, 16, 18], "chosen": 6, "set_scor": 6, "newscor": 6, "sample_label": 6, "feature_label": 6, "to_omics_contain": 6, "sample_id": 6, "row_label": 6, "column_label": 6, "tabular": [6, 7], "row": [6, 7, 13, 15, 16, 18], "column": [6, 7, 13, 15, 16, 18], "label": 6, "meant": 6, "union": 6, "lofl_arrai": 6, "pd": [6, 9, 12, 13, 14, 15, 16, 17, 18], "column_nam": 6, "drop": 6, "row_nam": 6, "callabl": 6, "convert_feature_id": 6, "col": 6, "ha": [6, 7], "dimens": 6, "gene_level_threshold": 6, "omics_datafram": [6, 14], "thresholding_strat": [6, 14], "global": [6, 14], "global_threshold_low": [6, 14], "global_threshold_upp": [6, 14], "local_threshold": [6, 14], "It": [6, 7, 8, 13, 14, 15, 16, 17, 18], "local": [6, 14], "approach": [6, 12, 14], "describ": [6, 14], "richel": [6, 14, 17], "joshi": [6, 14], "lewi": [6, 14], "2019": [6, 14, 17], "doi": [6, 14], "org": [6, 14], "10": [6, 14], "1371": [6, 14], "journal": [6, 14], "pcbi": [6, 14], "1007185": [6, 14], "These": [6, 14], "than": [6, 7, 14], "gtu": [6, 14], "inact": [6, 14], "greater": [6, 14], "gtl": [6, 14], "t1": [6, 14], "lt": [6, 14], "t2": [6, 14], "thei": [6, 14], "distribut": [6, 8, 14, 15, 17], "repres": [6, 14, 17], "posit": [6, 14], "25": [6, 14], "75": [6, 14], "dataset": [6, 13, 14, 15, 16, 18], "correspond": [6, 14], "quantil": [6, 14], "panda": [6, 7, 12, 13, 14, 15, 16, 17, 18], "strategi": [6, 12, 13, 14, 15, 16, 18], "apply_thresholding_filt": [6, 14], "filtered_dataset": 6, "global_threshold": 6, "sample_seri": 6, "seri": 6, "gtlow": 6, "maxexp": 6, "process": [6, 10, 12, 13, 14, 15, 16, 18], "singl": [6, 8, 9, 12, 17], "sampl": [6, 7, 12, 13, 15, 16, 17, 18], "filtered_sampl": 6, "local_t1_threshold": 6, "local_t2_threshold": 6, "gtup": 6, "threshold_strategi": 6, "jorg": [6, 7], "gome": [6, 7], "2018": [6, 7], "id_convert": 6, "better": 6, "done": [6, 11, 13, 15, 16, 17, 18], "databas": 6, "hgnc_id": 6, "entrez_id": [6, 12, 13, 15, 16, 18], "ensembl_gene_id": 6, "vega_id": 6, "ucsc_id": 6, "ccds_id": 6, "uniprot_id": 6, "pubmed_id": 6, "omim_id": 6, "locus_group": 6, "locus_typ": 6, "alias_symbol": 6, "alias_nam": 6, "prev_symbol": 6, "prev_nam": 6, "ena": 6, "refseq_access": 6, "rna_central_id": 6, "exact": [6, 7], "input": [6, 13], "output": [6, 8, 13, 15, 16, 18], "identif": 6, "also": [6, 13, 15], "handl": [6, 7], "case": [6, 7, 12, 15, 16, 18], "some": [6, 12], "do": 6, "tabl": 6, "protected_react": [6, 13], "protect": [6, 13, 15, 16, 17, 18], "being": 6, "data_map": [6, 13, 15, 16, 18], "score_appli": [6, 12, 15, 16, 18], "continu": [6, 11, 12, 15, 16, 18], "group_funct": [6, 13], "09": 7, "generic_read": 7, "path": [7, 8, 13, 15, 16, 18], "idcol": 7, "expcol": 7, "header_start": 7, "sep": 7, "file": [7, 8, 13, 15, 16, 17, 18], "unabl": 7, "rna": 7, "seq": 7, "gdc": 7, "capabl": 7, "info": 7, "befor": [7, 11, 13, 14, 15, 16, 18], "header": [7, 13, 15, 16, 18], "expres": 7, "read": [7, 8, 11, 13, 15, 16, 18], "line": 7, "separ": 7, "execut": 7, "path_or_df": [7, 12, 13, 15, 16, 18], "index_col": [7, 12, 13, 14, 15, 16, 17, 18], "sample_in_row": [7, 13, 15, 16, 18], "header_offset": [7, 13, 15, 16, 18], "cache_df": 7, "ignore_sampl": 7, "transcriptom": [7, 12, 13, 15, 16, 18], "dsappli": 7, "ani": [7, 13, 15, 16, 18], "recommend": 7, "special": 7, "skip": [7, 13, 15, 16, 18], "cach": 7, "ignor": 7, "read_csv": [7, 12, 13, 14, 15, 16, 17, 18], "__iter__": 7, "over": 7, "yield": 7, "to_contain": [7, 12, 13, 15, 16, 18], "03": 7, "hpa_read": 7, "fpath": 7, "id_col": 7, "includena": 7, "pathologi": 7, "tsv": 7, "account": 7, "exactli": 7, "regard": 7, "should": [7, 15, 16, 17], "retriev": 7, "ensembl": 7, "gene_symbol": 7, "geneid": 7, "expressionvalu": 7, "19": 7, "probe_read": 7, "annotfil": 7, "convtarget": 7, "convsep": 7, "expsep": 7, "db": 7, "barcod": 7, "omnibu": 7, "probeid": 7, "annot": [7, 8], "chip": 7, "vendor": 7, "appropri": [7, 11, 13, 15, 16, 18], "probe": 7, "more": [7, 11], "translat": 7, "entrez": 7, "equival": 7, "intes": 7, "inflow": [8, 17], "outflow": [8, 17], "satisfi": 8, "apply_evalu": 8, "expect": 8, "combin": [8, 13, 15, 16, 18], "add": 8, "have": [8, 15, 16, 18], "failur": 8, "criteria": 8, "sum": [8, 12, 13, 15, 16, 18], "combine_inplac": 8, "evaluate_solut": 8, "ftol": 8, "flux_constraint": 8, "get_add_reaction_arg": 8, "close": [8, 17], "get_add_reaction_cmd": 8, "commandhistori": 8, "command": 8, "get_task_bound": 8, "id_replac": 8, "inflow_dict": [8, 17], "involved_react": 8, "involv": 8, "mandatory_act": [8, 17], "outflow_dict": [8, 17], "reaction_dict": [8, 17], "should_fail": 8, "wrapper": [8, 11, 12, 17], "around": [8, 17], "rxn": 8, "mtn": 8, "batch_evalu": 8, "bound_chang": 8, "12": 8, "output_sol": 8, "mp_batch_siz": 8, "5000": 8, "chang": [8, 17], "multiprocess": [8, 12], "batch_funct": [8, 17], "param": [8, 17], "current_task": 8, "context_funct": 8, "flux_distribution_func": 8, "prior": 8, "task_io": [8, 17], "subclass": 8, "write": [8, 17], "excel": 8, "read_from_str": 8, "format": [8, 13, 14, 15, 16, 18], "specifi": 8, "read_task": [8, 17], "buffer_or_path": 8, "binary_mod": 8, "buffer": 8, "textiobas": 8, "binari": 8, "relev": [8, 13, 15, 16, 18], "write_to_str": 8, "json": [8, 17], "task_arg": 8, "write_task": 8, "byte": 8, "written": 8, "comput": 9, "z": 9, "model_simul": 10, "constraintbasedmodelsimul": 10, "scenario": 10, "post_process": 10, "post": 10, "simulation_funct": 10, "objective_coeffici": 10, "coeffici": [10, 15], "maxim": 10, "typic": 11, "workflow": 11, "follow": [11, 12, 13, 14, 15, 16, 17, 18], "step": [11, 13], "attribut": [11, 13, 14, 15, 16, 18], "imput": 11, "default_cor": 11, "adjusted_scor": 11, "custom": [11, 13], "note": [11, 15, 16], "For": [11, 13, 15, 16, 18], "adequ": [11, 13], "moreov": [11, 13, 15, 16, 18], "setup": 11, "initi": [11, 17], "parallel": [11, 17], "save": 11, "introduc": [12, 14], "previou": 12, "howev": [12, 13, 14, 15, 16, 18], "demonstr": 12, "limit": 12, "In": [12, 13, 14, 15, 16, 18], "multipl": 12, "henc": [12, 15, 16, 18], "make": 12, "necess": 12, "batch_run": [12, 17], "fulli": 12, "thu": 12, "four": 12, "paramet": [12, 14], "paramarg": 12, "re": [12, 13, 15, 16, 17, 18], "methods_wrapp": [12, 13, 15, 16, 18], "reconstructionwrapp": [12, 13, 15, 16, 18], "patt": [12, 13, 15, 16, 18], "compil": [12, 13, 15, 16, 18], "__cobampgprdot__": [12, 13, 15, 16, 18], "replace_alt_transcript": [12, 13, 15, 16, 18], "sub": [12, 13, 15, 16, 18], "read_sbml_model": [12, 13, 15, 16, 17, 18], "humangem_consistent_covid19_ham": 12, "xml": [12, 13, 15, 16, 17, 18], "model_wrapp": [12, 13, 15, 16, 18], "ttg_ratio": [12, 13, 15, 16, 18], "9999": [12, 13, 15, 16, 18], "gpr_gene_parse_funct": [12, 13, 15, 16, 18], "omics_data": [12, 13, 14, 15, 16, 18], "filepath_or_buff": [12, 14], "desai": [12, 14], "gtex_ensembl": [12, 14], "csv": [12, 13, 14, 15, 16, 17, 18], "loc": 12, "lung_healthi": 12, "lung_covid19": 12, "omics_contain": [12, 13, 15, 16, 18], "run_from_om": 12, "and_or_func": 12, "gpr": [12, 13, 15, 16, 18], "integration_strategi": 12, "def": [12, 13, 15, 16, 18], "reconstruction_function_gimm": 12, "reaction_map_scor": [12, 13, 15, 16, 18], "return": [12, 13, 15, 16, 18], "els": [12, 15, 16, 17, 18], "item": [12, 13, 15, 16, 17, 18], "rec_wrapp": 12, "reconstruction_wrapp": 12, "reac_id": 12, "r_id": [12, 13, 15], "metab_id": 12, "m_id": [12, 15], "biomass_human": [12, 15], "batch_gimme_r": 12, "modelbasedwrapp": [13, 15, 16, 18], "we": [13, 15, 16, 17, 18], "pars": [13, 15, 16, 17, 18], "later": [13, 15, 16, 17, 18], "secondli": [13, 15, 16, 18], "humangem_consist": [13, 15, 16, 18], "expression_data": [13, 15, 16, 18], "exampl": [13, 14, 15, 16, 18], "single_sampl": [13, 15, 16, 18], "wrap": [13, 15, 16, 18], "so": [13, 15, 16, 18], "ratio": [13, 15, 16, 18], "total": [13, 15, 16, 18], "cobramodelobjectread": [13, 15, 16, 18], "etc": [13, 15, 16, 18], "instead": [13, 15, 16, 18], "through": [13, 14, 15, 16, 18], "associ": [13, 15, 16, 17, 18], "access": [13, 14, 15, 16, 18], "mean": [13, 15, 16, 18], "tailor": 13, "pipelin": 13, "achiev": 13, "sinc": [13, 15], "want": [13, 15, 16, 18], "dure": 13, "integration_fx": 13, "belong": 13, "math": 13, "biomass": [13, 15], "threshold_integr": 13, "threshold_scor": 13, "print": [13, 17], "end": [13, 15, 16, 18], "keept": 13, "ordered_id": 13, "core_idx": 13, "l": 13, "instanti": [13, 14], "model_fastcor": 13, "u": [15, 16, 18], "you": [15, 16, 17, 18], "nan": [15, 16, 18], "mind": [15, 16, 18], "alter": [15, 16, 18], "ouput": [15, 16, 18], "continuous_integr": [15, 16, 18], "thresholdscoreintegrationstrategi": [15, 16, 18], "abl": [15, 16, 18], "connect": 15, "below": 15, "your": [15, 16], "goal": [15, 16], "further": [15, 16, 17], "edit": [15, 16], "accordingli": [15, 16], "idx_object": 15, "gimme_run": 15, "kept": [15, 18], "__dict__": 15, "_solution__value_map": 15, "model_imat": 16, "simpl": 17, "respect": 17, "stoichiometri": 17, "eg": 17, "rxd": 17, "r1": 17, "m2": 17, "rate": 17, "m5": 17, "jsonencod": 17, "jsondecod": 17, "task_model": 17, "recon3d_301_consist": 17, "fastcore_res_dict": 17, "r3d_compact_ccle_bc_fastcor": 17, "to_dict": 17, "tasks_path": 17, "nl2019_tasks_r3d_compact": 17, "exist": 17, "adapt": 17, "public": 17, "et": 17, "al": 17, "task_list": 17, "len": 17, "without": 17, "boundari": 17, "easili": 17, "knock_out": 17, "all_react": 17, "hold": 17, "task_eval_result": 17, "statement": 17, "temporarili": 17, "appear": 17, "context_specific_model": 17, "except": 17, "to_remov": 17, "rid": 17, "get_by_id": 17, "task_ev": 17, "futur": 17, "refer": 17, "task_nam": 17, "take": 17, "tev": 17, "amount": 17, "batch_res_task": 17, "element": 17, "length": 17, "3": [14, 17], "suppos": 17, "criterion": 17, "don": 17, "task_csm_r": 17, "zip": 17, "master": 17, "r3d_compact_task_results_ccle_bc_new_nodrains_only_fea": 17, "w": 17, "encod": 17, "model_gimm": 18, "how": 14, "bellow": 14, "br": [], "center": [], "img": [], "src": [], "gl_threshold": [], "jpg": [], "width": [], "750": [], "architectur": [], "imag": [], "new_omics_data": 14}, "objects": {"troppo.methods": [[3, 0, 0, "-", "base"]], "troppo.methods.base": [[3, 1, 1, "", "ContextSpecificModelReconstructionAlgorithm"], [3, 1, 1, "", "GapfillAlgorithm"], [3, 1, 1, "", "GapfillProperties"], [3, 1, 1, "", "PropertiesReconstruction"], [3, 5, 1, "", "decode_mt_list"], [3, 5, 1, "", "decode_rx_list"]], "troppo.methods.base.ContextSpecificModelReconstructionAlgorithm": [[3, 2, 1, "", "properties_class"], [3, 3, 1, "", "run"]], "troppo.methods.base.GapfillAlgorithm": [[3, 2, 1, "", "properties_class"], [3, 3, 1, "", "run"]], "troppo.methods.base.GapfillProperties": [[3, 4, 1, "", "decoder_function"]], "troppo.methods.base.PropertiesReconstruction": [[3, 3, 1, "", "from_integrated_scores"]], "troppo.methods.gapfill": [[4, 0, 0, "-", "consensus"], [4, 0, 0, "-", "efm"], [4, 0, 0, "-", "fastcc"], [4, 0, 0, "-", "pathway_analysis"]], "troppo.methods.gapfill.consensus": [[4, 1, 1, "", "CombinatorialGapfill"]], "troppo.methods.gapfill.consensus.CombinatorialGapfill": [[4, 3, 1, "", "build_final_model"], [4, 3, 1, "", "gapfill"], [4, 3, 1, "", "generate_partial_models"], [4, 3, 1, "", "is_valid_model"]], "troppo.methods.gapfill.efm": [[4, 1, 1, "", "EFMGapfill"], [4, 1, 1, "", "EFMGapfillProperties"]], "troppo.methods.gapfill.efm.EFMGapfill": [[4, 3, 1, "", "gapfill"], [4, 3, 1, "", "get_enumerator"], [4, 4, 1, "", "properties_class"], [4, 3, 1, "", "run"]], "troppo.methods.gapfill.fastcc": [[4, 1, 1, "", "FastCC"], [4, 1, 1, "", "FastCCProperties"]], "troppo.methods.gapfill.fastcc.FastCC": [[4, 3, 1, "", "fastcc"], [4, 3, 1, "", "prepocessing"], [4, 3, 1, "", "run"]], "troppo.methods.gapfill.pathway_analysis": [[4, 1, 1, "", "CombinatorialEFMGapfill"], [4, 1, 1, "", "SubEFMGapfill"], [4, 5, 1, "", "simulate_context"]], "troppo.methods.gapfill.pathway_analysis.CombinatorialEFMGapfill": [[4, 3, 1, "", "combinatorial_gapfill"], [4, 3, 1, "", "gapfill_partial_pair"], [4, 3, 1, "", "generate_partial_models"], [4, 3, 1, "", "prune_model"]], "troppo.methods.gapfill.pathway_analysis.SubEFMGapfill": [[4, 3, 1, "", "gapfill"]], "troppo.methods.reconstruction": [[5, 0, 0, "-", "corda"], [5, 0, 0, "-", "fastcore"], [5, 0, 0, "-", "gimme"], [5, 0, 0, "-", "imat"], [5, 0, 0, "-", "swiftcore"], [5, 0, 0, "-", "tINIT"]], "troppo.methods.reconstruction.corda": [[5, 1, 1, "", "CORDA"], [5, 1, 1, "", "CORDAProperties"], [5, 1, 1, "", "CORSOModel"], [5, 1, 1, "", "CORSOSolution"]], "troppo.methods.reconstruction.corda.CORDA": [[5, 3, 1, "", "block_reactions_from_idxs"], [5, 3, 1, "", "check_if_blocked"], [5, 3, 1, "", "costfx_factory"], [5, 3, 1, "", "do_function_for_reactions_on_both_models"], [5, 3, 1, "", "find_dependent_reactions"], [5, 3, 1, "", "find_reaction_limits"], [5, 4, 1, "", "properties_class"], [5, 3, 1, "", "run"], [5, 3, 1, "", "run_corda"]], "troppo.methods.reconstruction.corda.CORDAProperties": [[5, 4, 1, "", "CONSTRAINBY_PERC"], [5, 4, 1, "", "CONSTRAINBY_VAL"], [5, 3, 1, "", "from_integrated_scores"]], "troppo.methods.reconstruction.corda.CORSOModel": [[5, 3, 1, "", "optimize_corso"], [5, 3, 1, "", "set_corso_objective"], [5, 3, 1, "", "set_costs"], [5, 3, 1, "", "solve_original_model"]], "troppo.methods.reconstruction.fastcore": [[5, 1, 1, "", "FASTcore"], [5, 1, 1, "", "FastcoreProperties"]], "troppo.methods.reconstruction.fastcore.FASTcore": [[5, 3, 1, "", "LP3"], [5, 3, 1, "", "LP7"], [5, 3, 1, "", "LP9"], [5, 3, 1, "", "fastcore"], [5, 3, 1, "", "findSparseMode"], [5, 3, 1, "", "generate_LP3_problem"], [5, 3, 1, "", "preprocessing"], [5, 4, 1, "", "properties_class"], [5, 3, 1, "", "reverse_irreversible_reactions_in_reverse_direction"], [5, 3, 1, "", "run"]], "troppo.methods.reconstruction.fastcore.FastcoreProperties": [[5, 3, 1, "", "from_integrated_scores"]], "troppo.methods.reconstruction.gimme": [[5, 1, 1, "", "GIMME"], [5, 1, 1, "", "GIMMEModel"], [5, 1, 1, "", "GIMMEProperties"], [5, 1, 1, "", "GIMMESolution"]], "troppo.methods.reconstruction.gimme.GIMME": [[5, 4, 1, "", "properties_class"], [5, 3, 1, "", "run"]], "troppo.methods.reconstruction.gimme.GIMMEModel": [[5, 3, 1, "", "optimize_gimme"]], "troppo.methods.reconstruction.gimme.GIMMEProperties": [[5, 3, 1, "", "from_integrated_scores"]], "troppo.methods.reconstruction.gimme.GIMMESolution": [[5, 3, 1, "", "get_reaction_activity"]], "troppo.methods.reconstruction.imat": [[5, 1, 1, "", "IMAT"], [5, 1, 1, "", "IMATProperties"]], "troppo.methods.reconstruction.imat.IMAT": [[5, 3, 1, "", "empty_matrix"], [5, 3, 1, "", "generate_imat_problem"], [5, 4, 1, "", "properties_class"], [5, 3, 1, "", "run"], [5, 3, 1, "", "run_imat"]], "troppo.methods.reconstruction.imat.IMATProperties": [[5, 3, 1, "", "from_integrated_scores"]], "troppo.methods.reconstruction.swiftcore": [[5, 1, 1, "", "SWIFTCORE"], [5, 1, 1, "", "SwiftcoreProperties"], [5, 5, 1, "", "find_core"]], "troppo.methods.reconstruction.swiftcore.SWIFTCORE": [[5, 4, 1, "", "properties_class"], [5, 3, 1, "", "run"]], "troppo.methods.reconstruction.swiftcore.SwiftcoreProperties": [[5, 3, 1, "", "from_integrated_scores"]], "troppo.methods.reconstruction.tINIT": [[5, 1, 1, "", "tINIT"], [5, 1, 1, "", "tINITProperties"]], "troppo.methods.reconstruction.tINIT.tINIT": [[5, 3, 1, "", "build_problem"], [5, 3, 1, "", "preprocessing"], [5, 4, 1, "", "properties_class"], [5, 3, 1, "", "run"], [5, 3, 1, "", "run_tINIT"], [5, 3, 1, "", "solve_problem"]], "troppo.methods.reconstruction.tINIT.tINITProperties": [[5, 3, 1, "", "from_integrated_scores"]], "troppo.omics": [[6, 0, 0, "-", "core"], [6, 0, 0, "-", "gene_level_thresholding"], [6, 0, 0, "-", "id_converter"], [6, 0, 0, "-", "integration"]], "troppo.omics.core": [[6, 1, 1, "", "IdentifierMapping"], [6, 1, 1, "", "OmicsContainer"], [6, 1, 1, "", "OmicsDataMap"], [6, 1, 1, "", "OmicsMeasurementSet"], [6, 1, 1, "", "TabularContainer"], [6, 1, 1, "", "TypedOmicsMeasurementSet"], [6, 5, 1, "", "has_valid_dims"]], "troppo.omics.core.IdentifierMapping": [[6, 3, 1, "", "get_id_table"], [6, 3, 1, "", "map_ids"], [6, 2, 1, "", "name"]], "troppo.omics.core.OmicsContainer": [[6, 3, 1, "", "convertIds"], [6, 3, 1, "", "convertValues"], [6, 3, 1, "", "dropNA"], [6, 3, 1, "", "filterById"], [6, 3, 1, "", "filterByValue"], [6, 3, 1, "", "get_Condition"], [6, 3, 1, "", "get_Data"], [6, 3, 1, "", "get_Nomenclature"], [6, 3, 1, "", "get_OmicsType"], [6, 3, 1, "", "get_integrated_data_map"], [6, 3, 1, "", "load"], [6, 3, 1, "", "print_values"], [6, 3, 1, "", "set_condition"], [6, 3, 1, "", "set_data"], [6, 3, 1, "", "set_type"], [6, 3, 1, "", "transform"]], "troppo.omics.core.OmicsDataMap": [[6, 3, 1, "", "get_scores"], [6, 3, 1, "", "mapType"], [6, 3, 1, "", "select"], [6, 3, 1, "", "set_scores"]], "troppo.omics.core.OmicsMeasurementSet": [[6, 3, 1, "", "to_omics_container"]], "troppo.omics.core.TabularContainer": [[6, 2, 1, "", "column_names"], [6, 2, 1, "", "data"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "row_names"], [6, 3, 1, "", "transform"]], "troppo.omics.core.TypedOmicsMeasurementSet": [[6, 3, 1, "", "convert_feature_ids"], [6, 2, 1, "", "omics_type"], [6, 3, 1, "", "to_omics_container"]], "troppo.omics.gene_level_thresholding": [[6, 1, 1, "", "GeneLevelThresholding"]], "troppo.omics.gene_level_thresholding.GeneLevelThresholding": [[6, 3, 1, "", "apply_thresholding_filter"], [6, 3, 1, "", "global_thresholding"], [6, 3, 1, "", "local_t1_thresholding"], [6, 3, 1, "", "local_t2_thresholding"], [6, 3, 1, "", "threshold_strategy"]], "troppo.omics.id_converter": [[6, 5, 1, "", "idConverter"], [6, 5, 1, "", "searchNomenclature"]], "troppo.omics.integration": [[6, 1, 1, "", "AdjustedScoreIntegrationStrategy"], [6, 1, 1, "", "ContinuousScoreIntegrationStrategy"], [6, 1, 1, "", "CustomSelectionIntegrationStrategy"], [6, 1, 1, "", "DefaultCoreIntegrationStrategy"], [6, 1, 1, "", "ReactionProtectionMixin"], [6, 1, 1, "", "ScoreIntegrationStrategy"], [6, 1, 1, "", "ThresholdSelectionIntegrationStrategy"]], "troppo.omics.integration.AdjustedScoreIntegrationStrategy": [[6, 3, 1, "", "integrate"]], "troppo.omics.integration.ContinuousScoreIntegrationStrategy": [[6, 3, 1, "", "integrate"]], "troppo.omics.integration.CustomSelectionIntegrationStrategy": [[6, 3, 1, "", "integrate"]], "troppo.omics.integration.DefaultCoreIntegrationStrategy": [[6, 3, 1, "", "integrate"]], "troppo.omics.integration.ScoreIntegrationStrategy": [[6, 3, 1, "", "integrate"]], "troppo.omics.integration.ThresholdSelectionIntegrationStrategy": [[6, 3, 1, "", "integrate"]], "troppo.omics.readers": [[7, 0, 0, "-", "generic"], [7, 0, 0, "-", "hpa"], [7, 0, 0, "-", "microarray"]], "troppo.omics.readers.generic": [[7, 1, 1, "", "GenericReader"], [7, 1, 1, "", "TabularReader"]], "troppo.omics.readers.generic.GenericReader": [[7, 3, 1, "", "load"]], "troppo.omics.readers.generic.TabularReader": [[7, 3, 1, "", "to_containers"]], "troppo.omics.readers.hpa": [[7, 1, 1, "", "HpaReader"]], "troppo.omics.readers.hpa.HpaReader": [[7, 3, 1, "", "load"]], "troppo.omics.readers.microarray": [[7, 1, 1, "", "ProbeReader"]], "troppo.omics.readers.microarray.ProbeReader": [[7, 3, 1, "", "load"]], "troppo.tasks": [[8, 0, 0, "-", "core"], [8, 0, 0, "-", "task_io"]], "troppo.tasks.core": [[8, 1, 1, "", "Task"], [8, 1, 1, "", "TaskEvaluator"]], "troppo.tasks.core.Task": [[8, 2, 1, "", "annotations"], [8, 3, 1, "", "apply_evaluate"], [8, 3, 1, "", "combine"], [8, 3, 1, "", "combine_inplace"], [8, 3, 1, "", "evaluate_solution"], [8, 2, 1, "", "flux_constraints"], [8, 3, 1, "", "get_add_reaction_args"], [8, 3, 1, "", "get_add_reaction_cmds"], [8, 3, 1, "", "get_task_bounds"], [8, 3, 1, "", "id_replace"], [8, 2, 1, "", "inflow_dict"], [8, 2, 1, "", "involved_reactions"], [8, 2, 1, "", "mandatory_activity"], [8, 2, 1, "", "name"], [8, 2, 1, "", "outflow_dict"], [8, 2, 1, "", "reaction_dict"], [8, 2, 1, "", "should_fail"]], "troppo.tasks.core.TaskEvaluator": [[8, 3, 1, "", "batch_evaluate"], [8, 3, 1, "", "batch_function"], [8, 2, 1, "", "current_task"], [8, 3, 1, "", "evaluate"], [8, 2, 1, "", "tasks"]], "troppo.tasks.task_io": [[8, 1, 1, "", "ExcelTaskIO"], [8, 1, 1, "", "JSONTaskIO"], [8, 1, 1, "", "TaskIO"]], "troppo.tasks.task_io.ExcelTaskIO": [[8, 3, 1, "", "read_from_string"], [8, 3, 1, "", "read_task"], [8, 3, 1, "", "write_to_string"]], "troppo.tasks.task_io.JSONTaskIO": [[8, 3, 1, "", "read_from_string"], [8, 3, 1, "", "write_to_string"]], "troppo.tasks.task_io.TaskIO": [[8, 3, 1, "", "read_from_string"], [8, 3, 1, "", "read_task"], [8, 3, 1, "", "write_task"], [8, 3, 1, "", "write_to_string"]], "troppo.utilities": [[9, 0, 0, "-", "list"], [9, 0, 0, "-", "statistics"]], "troppo.utilities.list": [[9, 5, 1, "", "if_none_return_list"], [9, 5, 1, "", "is_list"], [9, 5, 1, "", "is_list_else_empty"]], "troppo.utilities.statistics": [[9, 5, 1, "", "normalize"], [9, 5, 1, "", "z_score"]], "troppo.validation": [[10, 0, 0, "-", "core"]], "troppo.validation.core": [[10, 1, 1, "", "ContextSpecificModelSimulator"], [10, 5, 1, "", "default_post_processing_func"]], "troppo.validation.core.ContextSpecificModelSimulator": [[10, 3, 1, "", "simulate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "troppo": [0, 2], "": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "instal": 1, "from": 1, "pypi": 1, "stabl": 1, "releas": 1, "github": 1, "latest": 1, "develop": 1, "method": [3, 4, 5, 7], "modul": [3, 6, 8, 9, 10], "base": 3, "class": 3, "gapfil": [3, 4], "reconstruct": [3, 5], "paramet": [3, 4, 5, 6, 7, 8, 9, 10], "combinatori": 4, "algorithm": [4, 5], "return": [4, 5, 6, 7, 8, 9, 10], "elementari": 4, "flux": 4, "mode": 4, "fastcc": 4, "pathwai": 4, "analysi": 4, "corda": 5, "attribut": [5, 6], "fastcor": [5, 13], "gimm": [5, 15], "imat": [5, 16], "swiftcor": 5, "t": 5, "init": 5, "omic": [6, 7, 12, 14], "core": [6, 8, 10], "gene": [6, 13, 14, 15, 16, 18], "level": [6, 14], "threshold": [6, 14], "id": [6, 13, 15, 16, 18], "convert": 6, "reaction": 6, "integr": [6, 12, 13, 15, 16, 18], "data": [6, 7, 12, 13, 14, 15, 16, 18], "reader": 7, "gener": 7, "argument": 7, "hpa": 7, "microarrai": 7, "task": [8, 17], "assess": 8, "io": 8, "util": 9, "list": 9, "statist": 9, "valid": 10, "tutori": [11, 13, 14, 15, 16, 18], "batch": 12, "initi": [12, 13, 15, 16, 18], "setup": [12, 13, 14, 15, 16, 17, 18], "defin": 12, "function": 12, "parallel": 12, "run": [12, 13, 15, 16, 18], "import": [13, 14, 15, 16, 18], "creat": [13, 15, 16, 18], "omicscontain": [13, 15, 16, 18], "object": [13, 15, 16, 18], "model": [13, 15, 16, 17, 18], "wrapper": [13, 15, 16, 18], "map": [13, 15, 16, 18], "score": [13, 15, 16, 18], "perform": 17, "evalu": 17, "set": 17, "save": 17, "result": 17, "tinit": 18, "read": 14, "appli": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Welcome to Troppo\u2019s documentation!": [[0, "welcome-to-troppo-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Installation": [[1, "installation"]], "Instalation from PyPI (stable releases)": [[1, "instalation-from-pypi-stable-releases"]], "Instalation from github (latest development release)": [[1, "instalation-from-github-latest-development-release"]], "Troppo": [[2, "troppo"]], "Methods module": [[3, "methods-module"]], "Base classes for Gapfilling and Reconstruction": [[3, "base-classes-for-gapfilling-and-reconstruction"]], "Parameters": [[3, "parameters"], [3, "id1"], [4, "parameters"], [4, "id1"], [4, "id2"], [4, "id4"], [4, "id6"], [4, "id9"], [4, "id11"], [4, "id15"], [4, "id18"], [4, "id19"], [4, "id20"], [5, "parameters"], [5, "id1"], [5, "id2"], [5, "id3"], [5, "id4"], [5, "id6"], [5, "id9"], [5, "id11"], [5, "id12"], [5, "id14"], [5, "id15"], [5, "id17"], [5, "id19"], [5, "id22"], [5, "id25"], [5, "id28"], [5, "id29"], [5, "id31"], [5, "id36"], [5, "id39"], [5, "id42"], [5, "id44"], [5, "id46"], [5, "id50"], [5, "id51"], [5, "id53"], [5, "id55"], [5, "id57"], [5, "id62"], [5, "id63"], [7, "parameters"], [7, "id6"], [8, "parameters"], [8, "id1"], [8, "id3"], [8, "id5"], [8, "id7"], [8, "id9"], [8, "id12"], [8, "id14"], [8, "id15"], [8, "id17"], [8, "id19"], [8, "id22"], [8, "id24"], [8, "id26"], [8, "id28"], [8, "id30"], [8, "id32"], [8, "id34"], [9, "parameters"], [9, "id1"], [10, "parameters"], [10, "id1"], [10, "id2"], [6, "parameters"], [6, "id1"], [6, "id2"], [6, "id3"], [6, "id5"], [6, "id7"], [6, "id8"], [6, "id10"], [6, "id12"], [6, "id13"], [6, "id15"], [6, "id16"], [6, "id18"], [6, "id20"], [6, "id22"], [6, "id24"], [6, "id26"], [6, "id28"], [6, "id30"], [6, "id33"], [6, "id36"], [6, "id39"]], "Gapfilling Methods": [[4, "gapfilling-methods"]], "Combinatorial Gapfilling Algorithm": [[4, "module-troppo.methods.gapfill.consensus"]], "Returns": [[4, "returns"], [4, "id3"], [4, "id5"], [4, "id7"], [4, "id10"], [4, "id12"], [4, "id13"], [4, "id16"], [4, "id17"], [4, "id21"], [5, "returns"], [5, "id5"], [5, "id7"], [5, "id8"], [5, "id10"], [5, "id13"], [5, "id16"], [5, "id18"], [5, "id20"], [5, "id21"], [5, "id23"], [5, "id24"], [5, "id26"], [5, "id27"], [5, "id30"], [5, "id33"], [5, "id37"], [5, "id40"], [5, "id43"], [5, "id47"], [5, "id48"], [5, "id49"], [5, "id52"], [5, "id54"], [5, "id56"], [5, "id58"], [5, "id59"], [5, "id60"], [5, "id61"], [5, "id64"], [7, "returns"], [7, "id4"], [7, "id5"], [7, "id7"], [8, "returns"], [8, "id2"], [8, "id4"], [8, "id6"], [8, "id8"], [8, "id10"], [8, "id11"], [8, "id13"], [8, "id16"], [8, "id18"], [8, "id20"], [8, "id21"], [8, "id23"], [8, "id25"], [8, "id27"], [8, "id29"], [8, "id31"], [8, "id33"], [8, "id35"], [9, "returns"], [9, "id2"], [10, "returns"], [10, "id3"], [6, "returns"], [6, "id4"], [6, "id6"], [6, "id11"], [6, "id17"], [6, "id19"], [6, "id21"], [6, "id23"], [6, "id25"], [6, "id27"], [6, "id29"], [6, "id31"], [6, "id34"], [6, "id37"], [6, "id40"]], "Elementary Flux Mode Gapfilling Algorithm": [[4, "elementary-flux-mode-gapfilling-algorithm"]], "Parameters:": [[4, "id8"], [4, "id14"], [5, "id34"], [5, "id38"], [5, "id41"]], "FastCC Gapfilling Algorithm": [[4, "module-troppo.methods.gapfill.fastcc"]], "Pathway Analysis Gapfilling Algorithm": [[4, "module-troppo.methods.gapfill.pathway_analysis"]], "Reconstruction Methods": [[5, "reconstruction-methods"]], "Corda Algorithm": [[5, "module-troppo.methods.reconstruction.corda"]], "Attributes": [[5, "attributes"], [5, "id32"], [5, "id45"], [6, "attributes"], [6, "id9"], [6, "id14"], [6, "id32"], [6, "id35"], [6, "id38"], [6, "id41"], [6, "id42"], [6, "id43"]], "FastCORE Algorithm": [[5, "module-troppo.methods.reconstruction.fastcore"]], "GIMME Algorithm": [[5, "module-troppo.methods.reconstruction.gimme"]], "Attributes:": [[5, "id35"]], "iMAT Algorithm": [[5, "module-troppo.methods.reconstruction.imat"]], "SwiftCore Algorithm": [[5, "module-troppo.methods.reconstruction.swiftcore"]], "(t)INIT Algorithm": [[5, "module-troppo.methods.reconstruction.tINIT"]], "Readers for Omics data": [[7, "readers-for-omics-data"]], "Generic Reader": [[7, "module-troppo.omics.readers.generic"]], "Arguments": [[7, "arguments"], [7, "id1"]], "Methods": [[7, "methods"]], "HPA Reader": [[7, "module-troppo.omics.readers.hpa"]], "Microarray Reader": [[7, "module-troppo.omics.readers.microarray"]], "Core module": [[8, "module-troppo.tasks.core"], [10, "module-troppo.validation.core"], [6, "module-troppo.omics.core"]], "Tasks Assessment Module": [[8, "tasks-assessment-module"]], "Task-io module": [[8, "module-troppo.tasks.task_io"]], "Utilities module": [[9, "utilities-module"]], "List module": [[9, "module-troppo.utilities.list"]], "Statistics module": [[9, "module-troppo.utilities.statistics"]], "Validation Module": [[10, "validation-module"]], "Batch integration of Omics Data": [[12, "batch-integration-of-omics-data"]], "Initial setup": [[12, "initial-setup"]], "Define the function to be parallelized": [[12, "define-the-function-to-be-parallelized"]], "Run the batch integration": [[12, "run-the-batch-integration"]], "Imports and Setup": [[15, "imports-and-setup"], [16, "imports-and-setup"], [13, "imports-and-setup"], [18, "imports-and-setup"], [14, "imports-and-setup"]], "Initial Setup": [[15, "initial-setup"], [16, "initial-setup"], [13, "initial-setup"], [18, "initial-setup"]], "Create the OmicsContainer object": [[15, "create-the-omicscontainer-object"], [16, "create-the-omicscontainer-object"], [13, "create-the-omicscontainer-object"], [18, "create-the-omicscontainer-object"]], "Create a model wrapper": [[15, "create-a-model-wrapper"], [16, "create-a-model-wrapper"], [13, "create-a-model-wrapper"], [18, "create-a-model-wrapper"]], "Map gene IDs in the data to model IDs": [[15, "map-gene-ids-in-the-data-to-model-ids"], [16, "map-gene-ids-in-the-data-to-model-ids"], [13, "map-gene-ids-in-the-data-to-model-ids"], [18, "map-gene-ids-in-the-data-to-model-ids"]], "Integrate Scores": [[15, "integrate-scores"], [16, "integrate-scores"], [13, "integrate-scores"], [18, "integrate-scores"]], "Run GIMME": [[15, "run-gimme"]], "GIMME tutorial": [[15, "gimme-tutorial"]], "iMAT tutorial": [[16, "imat-tutorial"]], "Run iMAT": [[16, "run-imat"]], "Task performance evaluation": [[17, "task-performance-evaluation"]], "Setup the model and the tasks": [[17, "setup-the-model-and-the-tasks"]], "Evaluate a set of tasks": [[17, "evaluate-a-set-of-tasks"]], "Save the results": [[17, "save-the-results"]], "Tutorials": [[11, "tutorials"]], "FastCORE tutorial": [[13, "fastcore-tutorial"]], "Run FASTcore": [[13, "run-fastcore"]], "tINIT tutorial": [[18, "tinit-tutorial"]], "Run tINIT": [[18, "run-tinit"]], "Omics Module": [[6, "omics-module"]], "Gene-level thresholding": [[6, "module-troppo.omics.gene_level_thresholding"]], "Gene ID converter": [[6, "module-troppo.omics.id_converter"]], "Reaction-level integration of Omics data": [[6, "module-troppo.omics.integration"]], "Gene-level thresholding tutorial": [[14, "gene-level-thresholding-tutorial"]], "Read Omics Data": [[14, "read-omics-data"]], "Apply Gene-level Thresholding": [[14, "apply-gene-level-thresholding"]]}, "indexentries": {}})